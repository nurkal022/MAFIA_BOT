from aiogram import Router, F
from aiogram.types import CallbackQuery
from sqlalchemy.orm import Session
from app.database.db import get_db
from app.database.models import User
import app.keyboards as kb
from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton

router = Router()

# Profile handlers
@router.callback_query(F.data == 'profile')
async def profile(callback: CallbackQuery, db: Session = next(get_db())):
    user = db.query(User).filter(User.tg_id == callback.from_user.id).first()
    if user:
        profile_text = (
            f"üë§ *–ò–º—è:* {user.name}\n"
            f"\n"
            # f"üéÆ *–°—ã–≥—Ä–∞–Ω–æ –∏–≥—Ä:* {user.games_played}\n"
            # f"üë• *–ú–∞—Ñ–∏—è –∏–≥—Ä:* {user.mafia_games}\n"
            # f"üë®‚Äç‚öïÔ∏è *–î–æ–∫—Ç–æ—Ä –∏–≥—Ä:* {user.doctor_games}\n"
            f"üíé *–ö—Ä–∏—Å—Ç–∞–ª–ª—ã:* {user.crystals}\n"
            f"üíµ *–î–µ–Ω—å–≥–∏:* {user.money}\n"
            f"\n"
            f"üõ°Ô∏è *–ó–∞—â–∏—Ç–∞:* {user.protection}\n"
            f"üìÅ *–î–æ–∫—É–º–µ–Ω—Ç—ã:* {user.documents}\n"
        )
        await callback.message.edit_text(profile_text, reply_markup=kb.profile_buttons, parse_mode='Markdown')
    else:
        await callback.answer("–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω.")

@router.callback_query(F.data == 'shop')
async def shop(callback: CallbackQuery):
    await callback.answer("–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –º–∞–≥–∞–∑–∏–Ω! –í—ã–±–µ—Ä–∏—Ç–µ, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ –∫—É–ø–∏—Ç—å.", show_alert=True)

@router.callback_query(F.data == 'buy_money')
async def buy_money(callback: CallbackQuery, db: Session = next(get_db())):
    user = db.query(User).filter(User.tg_id == callback.from_user.id).first()
    if user:
        user.protection += 1  # –ü—Ä–∏–º–µ—Ä, —É–≤–µ–ª–∏—á–∏–≤–∞–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞—â–∏—Ç—ã –Ω–∞ 1
        db.commit()
        await callback.answer("–í—ã –∫—É–ø–∏–ª–∏ –¥–µ–Ω—å–≥–∏!", show_alert=True)
    else:
        await callback.answer("–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω.", show_alert=True)

@router.callback_query(F.data == 'buy_crystals')
async def buy_crystals(callback: CallbackQuery, db: Session = next(get_db())):
    user = db.query(User).filter(User.tg_id == callback.from_user.id).first()
    if user:
        user.crystals += 10  # –ü—Ä–∏–º–µ—Ä, —É–≤–µ–ª–∏—á–∏–≤–∞–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫—Ä–∏—Å—Ç–∞–ª–ª–æ–≤ –Ω–∞ 10
        db.commit()
        await callback.answer("–í—ã –∫—É–ø–∏–ª–∏ –∫—Ä–∏—Å—Ç–∞–ª–ª—ã!", show_alert=True)
    else:
        await callback.answer("–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω.", show_alert=True)
